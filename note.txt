*********************************
*************  VIM  *************
*********************************
1.
shift + "*"  向下查找并高亮显示
shift + "#"  向上查找并高亮显示

2.
取消高亮： :noh

3.
行首  	0
行尾  	shift + 4

4.
Ctrl+S在Linux里是锁定屏幕的快捷键，如果要解锁，按下Ctrl+Q就可以了。

5.
u   撤销上一步的操作
Ctrl+r 恢复上一步被撤销的操作

6.
删除光标所在行
光标所在行，dd

7.
<Leader>默认是\

8.
按v进入visual状态，选择多行，用>或<缩进或缩出

9. 
ctrl + i/o 前后跳转

10.
[[ [] ][ ]]解释
第一个表示方向
[向前
]向后
第二个如果和第一个相同，表示首
第二个如果和第一个不同，表示尾
所以 ][表示向后找函数尾

11.
多行删除 ，：1,10d

12.
使用 shell  命令

13.
打开多个文件：
一、vim还没有启动的时候：
1.在终端里输入 
vim file1 file2 ... filen便可以打开所有想要打开的文件
2.vim已经启动
输入
:e file
可以再打开一个文件，并且此时vim里会显示出file文件的内容。
3.同时显示多个文件：
:sp         //水平切分窗口
:vsplit     //垂直切分窗口
二、在文件之间切换：
1.文件间切换
Ctrl+6  //两文件间的切换
:bn      //下一个文件
:bp      //上一个文件
:ls       //列出打开的文件，带编号
:b1~n  //切换至第n个文件
对于用(v)split在多个窗格中打开的文件，这种方法只会在当前窗格中切换不同的文件。
2.在窗格间切换的方法
Ctrl+w+方向键——切换到前／下／上／后一个窗格
Ctrl+w+h/j/k/l ——同上
Ctrl+ww——依次向后切换到下一个窗格中

14.
左移 < 
右移 >

15.no highlight
:nohl

16. 关闭当前标签 页
bd[NO]  关闭当前标签页

17.tags
 ctags -R *

:set tags=/srv/http/dev/proj/tags


18.
[{	转到上一个位于第一列的”{“。（前提是 “{” 和 “}” 都在第一列。）
]}	转到下一个位于第一列的”}”。

19.
vim 的快速注释和删除注释
 Ctrl+ V 选中多行进项操作 
  1. 选中多行后      // 注释
  2. 选中多行行首的  //   按 d 删除选中的注释


20.
1.跳到文本的最后一行：按“G”,即“shift+g”
2.跳转到第一行 gg

21.``
蛮好用的，会跳


22.如何让它不区分大小写呢?
 
:set ic  和  :set noic

23. display line number
set number

*********************************
*************  VS  **************
*********************************
1.
ctrl + -             back
ctrl + shift + -     forward

2.
ctrl+shift+8 返回 f12 跳转之前


3.
ctrl + x  删除整行

4.
alt 按住 上下左右 整行移动

5.
shift + alt 上/下拉光标

6.
ctrl + w 选中当前单词

7.ctrl + tab  choose active file

8.行首，行尾
Home  |<
End   >|

9. delete line
删除行  ctrl + l

10.
改成小写：Ctrl+U 改成大写：Ctrl+Shift+U

11.快速查找文件/函数
Ctrl+ ；

12. git 提交的时候，commit message 根据回车识别 ^M
footer header

*********************************
************  SHELL  ************
*********************************

1. 利用上一个命令的结果
(1) 符号：` `
名称：反引号，上分隔符
位置：反引号（`）这个字符一般在键盘的左上角，数字1的左边，不要将其同单引号（’）混淆
作用：反引号括起来的字符串被shell解释为命令行，在执行时，shell首先执行该命令行，并以它的标准输出结果取代整个反引号（包括两个反引号）部分

使用：可以用于把结果作为多个参数之一的需求
举例：$ echo `date` 
Thu Mar 7 21:31:11 CST 2013

(2) $() 
效果同` `

2. 转到后台运行 &

3. 软连接， 硬链接

软链接实际上只是一段文字，里面包含着它所指向的文件的名字，系统看到软链接后自动跳到对应的文件位置处进行处理；相反，硬链接为文件开设一个新的目录项，硬链接与文件原有的名字是平权的，在Linux看来它们是等价的。由于这个原因，硬链接不能连接两个不同文件系统上的文件。
 
软连接与windows下的快捷方式类似

至于硬连接，举个例子说吧，你把dir1/file1硬连接到dir2/file2, 就是在dir2下建立一个dir1/file1的镜像文件file2，它与file1是占用一样大的空间的，并且改动两者中的一个，另一个也会发生同样的改动.

ln -s abc cde 建立abc 的软连接
ln abc cde 建立abc的硬连接，

4. 
在linux通常的提示符下，按,再按回车，会进入>提示符。要退出，按CTRL+D.

5.
mount –o remount,rw / 这个命令来让我们的/路径文件系统为可读模式，这样就可以实现自由修改了。

6.
traceroute / windows tracert


7.
git push origin master:refs/for/master         // 提交本地test分支作为远程的master分支

 mount -t cifs //192.168.137.133/gjt . -o username=gjt,password=123

8. 
find . -name "*.c" | xargs grep -rnH res_init

9. change interface status
/etc/network/interface

10.
>> 是追加内容

> 是覆盖原有内容

11. 替换

*********************************
*******       VSCODE      *******
*********************************
1.自动格式化  shift + alt + f


*********************************
*******   虚拟机网络配置  *******
*********************************
1. 桥接模式  无法连接外网
2. nat 模式，  连接外网


*********************************
*******        杂项       *******
*********************************
《Linux 程序设计权威指南》

1. 可以通过 access ， 构造文件开关， 有妙用

*********************************
*******        GIT        *******
*********************************
git push origin master:refs/for/master
git push origin HEAD:refs/for/master

*********************************
*******       PATCH       *******
*********************************
patch -p0 AutoP_V83/libautop/src/extract/extract_user_cfg.c test.patch
patch  -p1  -i 0001-Tadiran-BugID-44951.patch


*********************************
*******       编译器      *******
*********************************
1. -w 
   Inhibit warning message
2. -Wl,-verbose
   print the linker message
3. readelf 
---------------------------------------------------------------

down vote
Consider the following:

Symbol table .symtab contains 1203 entries:

 Num:    Value  Size Type    Bind   Vis      Ndx Name
 310: a0008120     0 NOTYPE  GLOBAL DEFAULT  ABS _gp  
 734: a0000010    32 OBJECT  GLOBAL DEFAULT   77 v 
 818: 9d000018   496 FUNC    GLOBAL DEFAULT   71 main 
 849: a0000124     4 OBJECT  GLOBAL DEFAULT   78 phrase 
 955: a0000000     9 OBJECT  GLOBAL DEFAULT   77 peppers  
1020: a000023c   192 OBJECT  GLOBAL DEFAULT   80 bins
Num: = The symbol number
Value = The address of the Symbol
Size = The size of the symbol
Type = symbol type:  Func = Function, Object, File (source file name), Section = memory section, Notype = untyped absolute symbol or undefined
Bind = GLOBAL binding means the symbol is visible outside the file. LOCAL binding is visible only in the file. WEAK is like global, the symbol can be overridden.
Vis = Symbols can be default, protected, hidden or internal.
Ndx = The section number the symbol is in. ABS means absolute: not adjusted to any section address's relocation
Name = symbol name

---------------------------------------------------------------


######## dhcp server #########
           linux  dhcpd
##############################

/****************************************************************************** 

修改时间: xx/xx/2013 

发布者 :  xxx

原版本号: x.x.x.x

新版本号: x.x.x.x

 

 问题分析：

 解决办法: 

 注意要点:        

 *****************************************************************************/

